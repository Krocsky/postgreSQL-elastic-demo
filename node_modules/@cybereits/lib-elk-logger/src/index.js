const bunyan = require('bunyan')
const bunyantcp = require('bunyan-logstash-tcp')

const LoggerType = {
  SYSTEMLOG: 'SYSTEMLOG',
  BUSINESSLOG: 'BUSINESSLOG',
  DEFAULT: 'DEFAULT',
}

const defaultOptions = {
  loggerType: LoggerType.DEFAULT,
  host: 'elk.cybereits.cn',
  port: 9998,
  tags: [],
  isDev: false,
  max_connect_retries: -1,
  retry_interval: 2000,
}

function initStreamOption(options) {
  let { loggerType, tags } = options

  ///系统
  if (loggerType === LoggerType.SYSTEMLOG) {
    options.tags = [...new Set(['systemLogs'].concat(tags))]
  } else if (loggerType === LoggerType.BUSINESSLOG) {
    options.tags = [...new Set(['businessLogs'].concat(tags))]
  }

  return options
}

/**
 * 创建日志记录器
 * @param { string } name 日志名称
 * @param { object } options 日志记录器配置：  
 * loggerType 日志类型   
 * host 主机地址（默认 elk.cybereits.cn)  
 * port 端口号（默认 9998）  
 * tags 标签数组（默认空）  
 * isDev 是否为开发环境（默认 false）
 */
function createLogger(name, options) {
  let streamOption = initStreamOption(Object.assign({}, defaultOptions, options))

  if (streamOption.isDev) {
    return console
  }

  return bunyan.createLogger({
    src: true,
    name: name,
    serializers: bunyan.stdSerializers,
    streams: [{
      level: 'debug',
      type: 'raw',
      stream: bunyantcp.createStream(streamOption),
    }],
  })
}

module.exports = {
  LoggerType,
  createLogger,
}
